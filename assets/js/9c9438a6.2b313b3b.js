(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6030],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return l},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),f=p(n),m=o,d=f["".concat(s,".").concat(m)]||f[m]||u[m]||i;return n?r.createElement(d,a(a({ref:t},l),{},{components:n})):r.createElement(d,a({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},916:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return c},metadata:function(){return s},toc:function(){return p},default:function(){return u}});var r=n(2122),o=n(9756),i=(n(7294),n(3905)),a=["components"],c={title:"Sharing Configuration Settings"},s={unversionedId:"Sharing-Configuration-Settings",id:"Sharing-Configuration-Settings",isDocsHomePage:!1,title:"Sharing Configuration Settings",description:"I'm very interested in having a project A be able to specify information that project B can use to compile and link against project A, without having to repeat that information all over the place.",source:"@site/docs/Sharing-Configuration-Settings.md",sourceDirName:".",slug:"/Sharing-Configuration-Settings",permalink:"/premake-core/docs/Sharing-Configuration-Settings",editUrl:"https://github.com/premake/premake-core/edit/master/website/docs/Sharing-Configuration-Settings.md",version:"current",lastUpdatedBy:"KyrietS",lastUpdatedAt:1622583663,formattedLastUpdatedAt:"6/1/2021",frontMatter:{title:"Sharing Configuration Settings"},sidebar:"docs",previous:{title:"Adding Unit Tests",permalink:"/premake-core/docs/Adding-Unit-Tests"},next:{title:"architecture",permalink:"/premake-core/docs/architecture"}},p=[],l={toc:p};function u(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"I'm very interested in having a project A be able to specify information that project B can use to compile and link against project A, without having to repeat that information all over the place.")),(0,i.kt)("p",null,'There have been discussions on forums new and old about this in the past; search for "usages". It would be great to pull those together here for reference if anyone gets a chance. In the meantime, feel free to add your approaches below.'),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"@starkos:")," We use functions here. For specifying how to compile and link against a library:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},'-- How to declare it\nfunction someLibrary(options)\n   defines { ... }\n   links { ... }\n   options = options or {}\n   if options.someFlag then\n      defines { ... }\n   end\nend\n\n-- How to use it\nproject "someOtherProject"\n   kind "ConsoleApp"\n   someLibrary { someFlag="true" }\n')),(0,i.kt)("p",null,'And for defining "classes" of projects:'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},'function someComponent_test(name)\n   project(name)\n   kind "ConsoleApp"\n   defines { ... }\n   links { ... }\n   filter {}\nend\n')))}u.isMDXComponent=!0}}]);