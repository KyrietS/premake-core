(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3469],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(r),f=o,m=d["".concat(c,".").concat(f)]||d[f]||p[f]||a;return r?n.createElement(m,i(i({ref:t},u),{},{components:r})):n.createElement(m,i({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4577:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return l},metadata:function(){return c},toc:function(){return s},default:function(){return p}});var n=r(2122),o=r(9756),a=(r(7294),r(3905)),i=["components"],l={title:"Adding Source Files"},c={unversionedId:"Adding-Source-Files",id:"Adding-Source-Files",isDocsHomePage:!1,title:"Adding Source Files",description:"You add files\u2014source code, resources, and so on\u2014to your project using the files function.",source:"@site/docs/Adding-Source-Files.md",sourceDirName:".",slug:"/Adding-Source-Files",permalink:"/premake-core/docs/Adding-Source-Files",editUrl:"https://github.com/premake/premake-core/edit/master/website/docs/Adding-Source-Files.md",version:"current",lastUpdatedBy:"KyrietS",lastUpdatedAt:1622582682,formattedLastUpdatedAt:"6/1/2021",frontMatter:{title:"Adding Source Files"},sidebar:"docs",previous:{title:"Scopes & Inheritance",permalink:"/premake-core/docs/Scopes-and-Inheritance"},next:{title:"Linking",permalink:"/premake-core/docs/Linking"}},s=[{value:"Excluding Files",id:"excluding-files",children:[]}],u={toc:s};function p(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"You add files\u2014source code, resources, and so on\u2014to your project using the ",(0,a.kt)("a",{parentName:"p",href:"/premake-core/docs/files"},"files")," function."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'files {\n   "hello.h",  -- you can specify exact names\n   "*.c",      -- or use a wildcard...\n   "**.cpp"    -- ...and recurse into subdirectories\n}\n')),(0,a.kt)("p",null,"You can use wildcards in the file patterns to match a set of files. The wildcard ","*"," will match files in one directory; the wildcard ","*","*"," will match files in one directory and also recurse down into any subdirectories."),(0,a.kt)("p",null,"Files located in other directories should be specified relative to the script file. For example, if the script is located at ",(0,a.kt)("inlineCode",{parentName:"p"},"MyProject/build")," and the source files are at ",(0,a.kt)("inlineCode",{parentName:"p"},"MyProject/src"),", the files should be specified as:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'files { "../src/*.cpp" }\n')),(0,a.kt)("p",null,"Paths should always use the forward slash ",(0,a.kt)("inlineCode",{parentName:"p"},"/")," as a separator; Premake will translate to the appropriate platform-specific separator as needed."),(0,a.kt)("h2",{id:"excluding-files"},"Excluding Files"),(0,a.kt)("p",null,"Sometimes you want most, but not all, of the files in a directory. In that case, use the ",(0,a.kt)("a",{parentName:"p",href:"/premake-core/docs/Removing-Values"},"removefiles()")," function to mask out those few exceptions."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'files { "*.c" }\nremovefiles { "a_file.c", "another_file.c" }\n')),(0,a.kt)("p",null,"Excludes may also use wildcards."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'files { "**.c" }\nremovefiles { "tests/*.c" }\n')),(0,a.kt)("p",null,"Sometimes you may want to exclude all the files in a particular directory, but aren't sure where that directory will fall in the source tree."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'files { "**.c" }\nremovefiles { "**/Win32Specific/**" }\n')))}p.isMDXComponent=!0}}]);